<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.org.iopts.statistics.dao.StatisticsDAO">

	<select id="statisticsList" parameterType="hashmap" resultType="hashmap">
		SELECT D.* ,
				CASE WHEN MAXRESULT = RRN THEN GREATEST(MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
					WHEN MAXRESULT = MOBILE_PHONE THEN GREATEST(RRN, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
					WHEN MAXRESULT = ACCOUNT_NUM THEN GREATEST(RRN, MOBILE_PHONE, CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
					WHEN MAXRESULT = CARD_NUM THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
					WHEN MAXRESULT = FOREIGNER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, CARD_NUM,DRIVER, EMAIL, PASSPORT)
					WHEN MAXRESULT = DRIVER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, EMAIL, PASSPORT)
					WHEN MAXRESULT = EMAIL THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, PASSPORT)
					WHEN MAXRESULT = PASSPORT THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL)	 
						ELSE 0 END AS TWOMAXRESULT
		FROM (SELECT TC.TARGET_ID, TC.AP_NO, IFNULL(AI.SVR_HOST,'-') AS SERVICE_NM, T.NAME, MAX(TC.REGDATE) AS REGDATE, 
				 GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT) AS MAXRESULT,
				 TC.PATH_CNT, TC.TOTAL, RRN, TC.MOBILE_PHONE, TC.ACCOUNT_NUM,  TC.CARD_NUM, TC.FOREIGNER, TC.DRIVER, TC.EMAIL, TC.PASSPORT
				FROM pi_ap_server AP, pi_topcomp TC, pi_targets T
				  # LEFT OUTER JOIN pi_target_user TU ON TC.TARGET_ID = TU.TARGET_ID AND TC.AP_NO = TU.AP_NO
				  	LEFT OUTER JOIN pi_account_info AI ON AI.HOST_NM = T.NAME
				WHERE TC.TARGET_ID = T.TARGET_ID
				  AND TC.AP_NO = T.AP_NO
				  AND T.AP_NO = AP.AP_NO
				  AND TC.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
				  AND AP.IS_SERVER = 1
				GROUP BY TC.TARGET_ID, TC.AP_NO )D
				ORDER BY D.PATH_CNT DESC
				LIMIT 5
	</select>
	
	<select id="manageList" parameterType="hashmap" resultType="hashmap">
		<!-- SELECT TARGET_ID, IFNULL(REGDATE, '합계')AS MONTH, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM, SUM(PATH_CNT) AS PATH_CNT,
				 SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, SUM(SEARCH) AS SEARCH
		FROM ( 
				SELECT TARGET_ID, REGDATE, SUM(PATH_CNT) AS  PATH_CNT, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM,
				 		SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, COUNT(TARGET_ID) AS SEARCH
				FROM (
						SELECT PATH_CNT, TARGET_ID, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, MAX(REGDATE) AS REGDATE, SUCCEED
						FROM( 
								SELECT PATH_CNT, ST.TARGET_ID, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, 
										 DATE_FORMAT(TC.REGDATE, '%y년 %m월') AS REGDATE,	IF(TOTAL != 0, 1,0) AS SUCCEED
								FROM pi_schedule_targets ST
									LEFT OUTER JOIN pi_topcomp TC USING(TARGET_ID, AP_NO)
								WHERE ST.AP_NO = 0
									AND TC.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
								) D
						GROUP BY REGDATE, TARGET_ID
						) S
				GROUP BY REGDATE
				ORDER BY REGDATE DESC 
				LIMIT 5 
				) T
		GROUP BY REGDATE WITH ROLLUP -->
		SELECT TARGET_ID, IFNULL(REGDATE, '합계')AS MONTH, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM, SUM(PATH_CNT) AS PATH_CNT,
				 SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, SUM(SEARCH) AS SEARCH
		FROM ( 
				SELECT TARGET_ID, REGDATE, SUM(PATH_CNT) AS  PATH_CNT, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM,
				 		SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, COUNT(*) AS SEARCH
				FROM (
						SELECT TC.PATH_CNT, ST.TARGET_ID, TC.RRN, TC.MOBILE_PHONE, TC.ACCOUNT_NUM, TC.CARD_NUM, TC.FOREIGNER, TC.DRIVER, TC.EMAIL, TC.PASSPORT, 
							   SUM(TC.RRN + TC.MOBILE_PHONE + TC.ACCOUNT_NUM + TC.CARD_NUM + TC.FOREIGNER + TC.DRIVER + TC.EMAIL + TC.PASSPORT) AS TOTAL,
							   DATE_FORMAT(SG.REGDATE, '%Y년 %m월') AS REGDATE, IF(TOTAL != 0, 1,0) AS SUCCEED
						FROM pi_schedule_group SG
							LEFT OUTER JOIN pi_schedule_targets ST ON SG.SCHEDULE_GROUP_ID = ST.SCHEDULE_GROUP_ID
							LEFT OUTER JOIN pi_topcomp TC ON ST.TARGET_ID = TC.TARGET_ID AND ST.AP_NO = TC.AP_NO 
						WHERE 1=1
						  AND SG.TYPE = 0
						  AND SG.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
						  GROUP BY REGDATE, ST.TARGET_ID, ST.AP_NO
						  HAVING ST.TARGET_ID
						) S
				GROUP BY REGDATE
				ORDER BY REGDATE DESC 
				LIMIT 5 
				) T
		GROUP BY REGDATE WITH ROLLUP
		
	</select>
	
	<select id="manageBarList" parameterType="hashmap" resultType="hashmap">
		<!-- SELECT TARGET_ID, RIGHT(REGDATE, 3) AS MONTH, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, SEARCH, SUCCEED, PATH_CNT
		FROM ( 
				SELECT TARGET_ID, REGDATE, SUM(PATH_CNT) AS  PATH_CNT, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM,
					 		SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, COUNT(TARGET_ID) AS SEARCH
				FROM (
						SELECT PATH_CNT, TARGET_ID, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, MAX(REGDATE) AS REGDATE, SUCCEED
						FROM( 
								SELECT PATH_CNT, TARGET_ID, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, 
										 DATE_FORMAT(TC.REGDATE, '%y년 %m월') AS REGDATE,	IF(TOTAL != 0, 1,0) AS SUCCEED
								FROM pi_schedule_targets ST
									LEFT OUTER JOIN pi_topcomp TC USING(TARGET_ID, AP_NO)
								WHERE AP_NO = 0
									AND TC.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59') 
								) D
						GROUP BY REGDATE, TARGET_ID 
						) S
				GROUP BY REGDATE
				ORDER BY REGDATE DESC 
				LIMIT 5 
			) T
		ORDER BY REGDATE -->
		SELECT TARGET_ID, RIGHT(REGDATE, 3) AS MONTH, RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT, TOTAL, SEARCH, SUCCEED, PATH_CNT
		FROM ( 
				SELECT TARGET_ID, REGDATE, SUM(PATH_CNT) AS  PATH_CNT, SUM(RRN) AS RRN, SUM(MOBILE_PHONE) AS MOBILE_PHONE, SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, SUM(CARD_NUM) AS CARD_NUM,
				 		SUM(FOREIGNER) AS FOREIGNER, SUM(DRIVER) AS DRIVER, SUM(EMAIL) AS EMAIL, SUM(PASSPORT) AS PASSPORT, SUM(TOTAL) AS TOTAL, SUM(SUCCEED) AS SUCCEED, COUNT(*) AS SEARCH
				FROM (
						SELECT TC.PATH_CNT, ST.TARGET_ID, TC.RRN, TC.MOBILE_PHONE, TC.ACCOUNT_NUM, TC.CARD_NUM, TC.FOREIGNER, TC.DRIVER, TC.EMAIL, TC.PASSPORT, 
							   SUM(TC.RRN + TC.MOBILE_PHONE + TC.ACCOUNT_NUM + TC.CARD_NUM + TC.FOREIGNER + TC.DRIVER + TC.EMAIL + TC.PASSPORT) AS TOTAL, 
							   DATE_FORMAT(SG.REGDATE, '%Y년 %m월') AS REGDATE, IF(TOTAL != 0, 1,0) AS SUCCEED
						FROM pi_schedule_group SG
							LEFT OUTER JOIN pi_schedule_targets ST ON SG.SCHEDULE_GROUP_ID = ST.SCHEDULE_GROUP_ID
							LEFT OUTER JOIN pi_topcomp TC ON ST.TARGET_ID = TC.TARGET_ID AND ST.AP_NO = TC.AP_NO 
						WHERE 1=1
						  AND SG.TYPE = 0
						  AND SG.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59') 
						  GROUP BY REGDATE, ST.TARGET_ID, ST.AP_NO
						  HAVING ST.TARGET_ID
						) S
				GROUP BY REGDATE
				ORDER BY REGDATE DESC 
				LIMIT 5 
			) T
		ORDER BY REGDATE		
	</select>
	
	<select id="mainChartStatistics" parameterType="hashmap" resultType="hashmap">
		WITH MEASUREMENT AS
			(SELECT T.TARGET_ID,
					 T.NAME,
					 T.AP_NO,
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE1,							-- 주민번호
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE2,		-- 외국인번호
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE3, 					-- 여권번호
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE4,	-- 운전자번호
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE5,
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE6,
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE7,
					 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE8
			FROM pi_ap_server AP, pi_summary S, pi_targets T
				LEFT OUTER JOIN pi_data_processing DP ON T.TARGET_ID = DP.TARGET_ID AND T.AP_NO = DP.AP_NO
			WHERE 1=1
			  AND T.TARGET_ID = S.TARGET_ID
			  AND T.AP_NO = S.AP_NO
			  AND S.AP_NO = AP.AP_NO
			 # AND DP.HASH_ID = S.OBJECT_ID
			  AND AP.IS_SERVER = 1
			  AND DP.PROCESSING_FLAG IN (1, 2, 3)
			  AND DP.APPROVAL_STATUS = 'E'
			  AND S.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
			GROUP BY T.TARGET_ID, T.AP_NO)
			
		SELECT TARGET_ID, IFNULL(NAME, '합계') AS NAME, 
				 SUM(TYPE1) AS TYPE1, -- 주민번호
				 SUM(TYPE2) AS TYPE2, -- 외국인번호
				 SUM(TYPE3) AS TYPE3, -- 여권번호
				 SUM(TYPE4) AS TYPE4, -- 운전면허번호
				 SUM(TYPE5) AS TYPE5, -- 카드번호
				 SUM(TYPE6) AS TYPE6, -- 계좌번호
				 SUM(TYPE7) AS TYPE7, -- 이메일
				 SUM(TYPE8) AS TYPE8  -- 휴대폰 번호
		FROM MEASUREMENT
		GROUP BY NAME WITH ROLLUP
	</select>
	
	<select id="TOPGridList" parameterType="hashmap" resultType="hashmap">
		SELECT D.* ,
			 CASE WHEN MAXRESULT = RRN THEN GREATEST(MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = MOBILE_PHONE THEN GREATEST(RRN, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = ACCOUNT_NUM THEN GREATEST(RRN, MOBILE_PHONE, CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = CARD_NUM THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = FOREIGNER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, CARD_NUM,DRIVER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = DRIVER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, EMAIL, PASSPORT)
				  WHEN MAXRESULT = EMAIL THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, PASSPORT)
				  WHEN MAXRESULT = PASSPORT THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL)	 
			 ELSE 0 END AS TWOMAXRESULT			
			FROM(SELECT TARGET_ID, NAME, HASH_ID, COUNT_HASH_ID, PROD, IFNULL(SERVICE_NM,'-') AS SERVICE_NM,
				 TYPE1 AS RRN, 
				 TYPE2 AS FOREIGNER, 
				 TYPE3 AS PASSPORT, 
				 TYPE4 AS DRIVER,
				 TYPE5 AS CARD_NUM, 
				 TYPE6 AS ACCOUNT_NUM, 
				 TYPE7 AS EMAIL, 
				 TYPE8 AS MOBILE_PHONE,  -- 휴대폰 번호,
				 SUM(TYPE1 + TYPE2 + TYPE3 + TYPE4 + TYPE5 + TYPE6 + TYPE7 + TYPE8) AS TOTAL,
				 GREATEST(TYPE1, TYPE2, TYPE3, TYPE4, TYPE5, TYPE6, TYPE7, TYPE8) AS MAXRESULT
				 FROM (SELECT T.TARGET_ID,
							  T.NAME,
							  T.AP_NO,
							  DP.HASH_ID,
							  T.PROD,
							  IFNULL((SELECT AI.SVR_HOST FROM pi_account_info AI WHERE AI.HOST_NM = T.NAME),'-') AS SERVICE_NM,
							  COUNT(DP.HASH_ID) AS COUNT_HASH_ID,					 
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE1,						
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE2,		
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE3, 					
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE4,	
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE5,
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE6,
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE7,
							  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE8
					FROM pi_ap_server AP, pi_targets T, pi_summary S, pi_data_processing DP
					WHERE 1=1
					  AND T.TARGET_ID = DP.TARGET_ID
					  AND T.AP_NO = DP.AP_NO
					  AND DP.TARGET_ID = S.TARGET_ID
					  AND DP.AP_NO = S.AP_NO
					  AND S.AP_NO = AP.AP_NO
					  AND DP.HASH_ID = S.OBJECT_ID
					  AND AP.IS_SERVER = 1
					  AND DP.PROCESSING_FLAG IN (1, 2, 3)
					  AND DP.APPROVAL_STATUS = 'E'
					  <if test="prod == 1">
					  	AND T.PROD = #{prod}
					  </if>
					  <if test="prod == 2">
					  	AND T.PROD = #{prod}
					  </if>
					  AND S.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
					GROUP BY T.TARGET_ID, T.AP_NO
					ORDER BY T.REGDATE DESC)M
			GROUP BY TARGET_ID) D
			ORDER BY D.COUNT_HASH_ID DESC
			LIMIT 5
		<!-- SELECT D.* ,
		 CASE WHEN MAXRESULT = RRN THEN GREATEST(MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = MOBILE_PHONE THEN GREATEST(RRN, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = ACCOUNT_NUM THEN GREATEST(RRN, MOBILE_PHONE, CARD_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = CARD_NUM THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, FOREIGNER, DRIVER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = FOREIGNER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM, CARD_NUM,DRIVER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = DRIVER THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, EMAIL, PASSPORT)
			  WHEN MAXRESULT = EMAIL THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, PASSPORT)
			  WHEN MAXRESULT = PASSPORT THEN GREATEST(RRN, MOBILE_PHONE, ACCOUNT_NUM,  CARD_NUM, FOREIGNER, DRIVER, EMAIL)	 
		 ELSE 0 END AS TWOMAXRESULT			
		FROM(SELECT TARGET_ID, NAME, HASH_ID, COUNT_HASH_ID, PROD, SERVICE_NM,
			 TYPE1 AS RRN, 
			 TYPE2 AS FOREIGNER, 
			 TYPE3 AS PASSPORT, 
			 TYPE4 AS DRIVER,
			 TYPE5 AS CARD_NUM, 
			 TYPE6 AS ACCOUNT_NUM, 
			 TYPE7 AS EMAIL, 
			 TYPE8 AS MOBILE_PHONE, 
			 SUM(TYPE1 + TYPE2 + TYPE3 + TYPE4 + TYPE5 + TYPE6 + TYPE7 + TYPE8) AS TOTAL,
			 GREATEST(TYPE1, TYPE2, TYPE3, TYPE4, TYPE5, TYPE6, TYPE7, TYPE8) AS MAXRESULT
			 FROM (SELECT T.TARGET_ID,
						  T.NAME,
						  T.AP_NO,
						  DP.HASH_ID,
						  T.PROD,
						  TU.SERVICE_NM,
						  COUNT(DP.HASH_ID) AS COUNT_HASH_ID,					 
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE1,						
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE2,		
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE3, 					
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE4,	
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE5,
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE6,
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE7,
						  SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE8
				FROM pi_targets T, pi_summary S, pi_data_processing DP, pi_target_user TU
				WHERE 1=1
				  AND T.TARGET_ID = DP.TARGET_ID
				  AND T.AP_NO = DP.AP_NO
				  AND DP.TARGET_ID = S.TARGET_ID
				  AND DP.AP_NO = S.AP_NO
				  AND DP.HASH_ID = S.OBJECT_ID
				  AND T.AP_NO = 0
				  AND DP.PROCESSING_FLAG IN (1, 2, 3)
				  AND DP.APPROVAL_STATUS = 'E'
				  <if test="prod == 1">
				  	AND T.PROD = #{prod}
				  </if>
				  <if test="prod == 2">
				  	AND T.PROD = #{prod}
				  </if>
				  AND S.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
				GROUP BY T.TARGET_ID, T.AP_NO
				ORDER BY T.REGDATE DESC)M
		GROUP BY TARGET_ID) D
		ORDER BY D.COUNT_HASH_ID DESC
		LIMIT 5 -->
	</select>
	
	<select id="totalStatistics" parameterType="hashmap" resultType="hashmap">
		SELECT TARGET_ID, NAME, HASH_ID, IFNULL(COUNT_HASH_ID, 0) AS COUNT_HASH_ID, COUNT_TARGET_ID,
				 IFNULL(TYPE1, 0) AS TYPE1,
				 CONCAT(IFNULL(ROUND(( TYPE1/TOTAL * 100 ),2), 0),'%') AS TYPE1_PERCENTAGE,
				 IFNULL(TYPE2, 0) AS TYPE2,
				 CONCAT(IFNULL(ROUND(( TYPE2/TOTAL * 100 ),2), 0),'%') AS TYPE2_PERCENTAGE,
				 IFNULL(TYPE3, 0) AS TYPE3,
				 CONCAT(IFNULL(ROUND(( TYPE3/TOTAL * 100 ),2), 0),'%') AS TYPE3_PERCENTAGE,
				 IFNULL(TYPE4, 0) AS TYPE4,
				 CONCAT(IFNULL(ROUND(( TYPE4/TOTAL * 100 ),2), 0),'%') AS TYPE4_PERCENTAGE,
				 IFNULL(TYPE5, 0) AS TYPE5,
				 CONCAT(IFNULL(ROUND(( TYPE5/TOTAL * 100 ),2), 0),'%') AS TYPE5_PERCENTAGE,
				 IFNULL(TYPE6, 0) AS TYPE6,
				 CONCAT(IFNULL(ROUND(( TYPE6/TOTAL * 100 ),2), 0),'%') AS TYPE6_PERCENTAGE,
				 IFNULL(TYPE7, 0) AS TYPE7,
				 CONCAT(IFNULL(ROUND(( TYPE7/TOTAL * 100 ),2), 0),'%') AS TYPE7_PERCENTAGE,
				 IFNULL(TYPE8, 0) AS TYPE8,
				 CONCAT(IFNULL(ROUND(( TYPE8/TOTAL * 100 ),2), 0),'%') AS TYPE8_PERCENTAGE,
				 IFNULL(TOTAL, 0) AS TOTAL
		FROM (SELECT *
				FROM 	(SELECT TARGET_ID, NAME, COUNT(D.HASH_ID) AS COUNT_HASH_ID, HASH_ID, COUNT(TARGET_ID) AS COUNT_TARGET_ID,
								 SUM(TYPE1) AS TYPE1, -- 주민번호
								 SUM(TYPE2) AS TYPE2, -- 외국인번호
								 SUM(TYPE3) AS TYPE3, -- 여권번호
								 SUM(TYPE4) AS TYPE4, -- 운전면허번호
								 SUM(TYPE5) AS TYPE5, -- 카드번호
								 SUM(TYPE6) AS TYPE6, -- 계좌번호
								 SUM(TYPE7) AS TYPE7, -- 이메일
								 SUM(TYPE8) AS TYPE8,  -- 휴대폰 번호
								 SUM(TYPE1 + TYPE2 + TYPE3 + TYPE4 + TYPE5 + TYPE6 + TYPE7 + TYPE8) AS TOTAL
						FROM (SELECT S.TARGET_ID,
									 S.AP_NO,
									 DP.HASH_ID, 
									 '합계' AS NAME,
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE1,							-- 주민번호
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE2,		-- 외국인번호
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE3, 					-- 여권번호
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE4,	-- 운전자번호
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE5,
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE6,
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE7,
									 SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE8
							FROM pi_ap_server AP, pi_summary S
								LEFT OUTER JOIN pi_data_processing DP ON S.TARGET_ID = DP.TARGET_ID AND S.AP_NO = DP.AP_NO
							WHERE 1=1
								AND S.AP_NO = AP.AP_NO
								AND AP.IS_SERVER = 1
								AND DP.PROCESSING_FLAG IN (1,2,3)
								AND DP.APPROVAL_STATUS = 'E'
								AND DP.HASH_ID = S.OBJECT_ID
								AND DP.REGDATE BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
							GROUP BY S.TARGET_ID, S.AP_NO) D
						GROUP BY NAME WITH ROLLUP ) S
			ORDER BY TOTAL DESC
			LIMIT 1) T
	</select>
	<select id="selectDataImple" resultType="hashmap">
		SELECT * FROM
			(SELECT  ROW_NUMBER() OVER(ORDER BY RATE DESC) AS NUM,
				F.TARGET_ID,
				F.AP_NO,
				F.NAME,
				F.SERVICE_CODE,
				IFNULL(F.SERVICE_NM,'-') AS SERVICE_NM,
				F.MAX_PATH_CNT,
				F.MAX_TOTAL,
				# CONCAT(ROUND(F.MAX_TOTAL / F.MIN_TOTAL * 100) , '%') AS RATE,
				CONCAT(ROUND((F.MAX_TOTAL - F.MIN_TOTAL) / F.MIN_TOTAL * 100), '%') AS RATE,
				DATE_FORMAT(F.MAX_DATE, '%Y-%m-%d') AS MAX_DATE,
				F.MIN_PATH_CNT,
				F.MIN_TOTAL,
				DATE_FORMAT(F.MIN_DATE, '%Y-%m-%d') AS MIN_DATE,
				F.COMPLETED,
				DATE_FORMAT(F.DATE_COMPLETED, '%Y-%m-%d %H:%i:%s') AS DATE_COMPLETED
			FROM
				(SELECT 
					D.TARGET_ID,
					D.AP_NO,
					D.NAME,
					D.SERVICE_CODE,
					D.SERVICE_NM,
					(SELECT TP.PATH_CNT FROM pi_topcomp TP WHERE TP.REGDATE = D.MAX_DATE AND TP.TARGET_ID = D.TARGET_ID AND TP.AP_NO = D.AP_NO) AS MAX_PATH_CNT,
					(SELECT TP.TOTAL FROM pi_topcomp TP WHERE TP.REGDATE = D.MAX_DATE AND TP.TARGET_ID = D.TARGET_ID AND TP.AP_NO = D.AP_NO) AS MAX_TOTAL,
					D.MAX_DATE,
					(SELECT TP.PATH_CNT FROM pi_topcomp TP WHERE TP.REGDATE = D.MIN_DATE AND TP.TARGET_ID = D.TARGET_ID AND TP.AP_NO = D.AP_NO) AS MIN_PATH_CNT,
					(SELECT TP.TOTAL FROM pi_topcomp TP WHERE TP.REGDATE = D.MIN_DATE AND TP.TARGET_ID = D.TARGET_ID AND TP.AP_NO = D.AP_NO) AS MIN_TOTAL,
					D.MIN_DATE,
					(SELECT COUNT(SCHEDULE_STATUS) FROM pi_schedules S WHERE D.TARGET_ID = S.SCHEDULE_TARGET_ID AND SCHEDULE_STATUS = 'completed') AS COMPLETED,
				 	(SELECT MAX(REGDATE) FROM pi_schedules S WHERE D.TARGET_ID = S.SCHEDULE_TARGET_ID AND SCHEDULE_STATUS = 'completed') AS DATE_COMPLETED
				FROM
					(SELECT	
						T.TARGET_ID,
						T.AP_NO,
						T.NAME,
						AI.SEL_RD AS SERVICE_CODE,
						AI.SVR_HOST AS SERVICE_NM,
						# TU.SERVICE_NM,
						MAX(TC.REGDATE) AS MAX_DATE,
						MIN(TC.REGDATE) AS MIN_DATE
					FROM pi_topcomp TC, pi_targets T 
						LEFT OUTER JOIN pi_account_info AI ON T.NAME = AI.HOST_NM
						LEFT OUTER JOIN pi_target_user TU ON T.TARGET_ID = TU.TARGET_ID AND T.AP_NO = TU.AP_NO
					WHERE TC.TARGET_ID = T.TARGET_ID 
					  AND TC.AP_NO = T.AP_NO
					GROUP BY TARGET_ID, AP_NO) D
			) F ) S
			WHERE 1=1
			 AND S.DATE_COMPLETED BETWEEN CONCAT(#{fromDate},' 00:00:00') AND CONCAT(#{toDate},' 23:59:59')
		 	 ORDER BY RATE DESC
		LIMIT 5
	</select>
</mapper>